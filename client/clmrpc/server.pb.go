// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package clmrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InvalidOrder_FailReason int32

const (
	InvalidOrder_INVALID_AMT InvalidOrder_FailReason = 0
)

var InvalidOrder_FailReason_name = map[int32]string{
	0: "INVALID_AMT",
}

var InvalidOrder_FailReason_value = map[string]int32{
	"INVALID_AMT": 0,
}

func (x InvalidOrder_FailReason) String() string {
	return proto.EnumName(InvalidOrder_FailReason_name, int32(x))
}

func (InvalidOrder_FailReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{18, 0}
}

type ServerOrderStateResponse_OrderState int32

const (
	ServerOrderStateResponse_SUBMITTED    ServerOrderStateResponse_OrderState = 0
	ServerOrderStateResponse_CLEARED      ServerOrderStateResponse_OrderState = 1
	ServerOrderStateResponse_PARTIAL_FILL ServerOrderStateResponse_OrderState = 2
	ServerOrderStateResponse_EXECUTED     ServerOrderStateResponse_OrderState = 3
	ServerOrderStateResponse_CANCELED     ServerOrderStateResponse_OrderState = 4
	ServerOrderStateResponse_EXPIRED      ServerOrderStateResponse_OrderState = 5
	ServerOrderStateResponse_FAILED       ServerOrderStateResponse_OrderState = 6
)

var ServerOrderStateResponse_OrderState_name = map[int32]string{
	0: "SUBMITTED",
	1: "CLEARED",
	2: "PARTIAL_FILL",
	3: "EXECUTED",
	4: "CANCELED",
	5: "EXPIRED",
	6: "FAILED",
}

var ServerOrderStateResponse_OrderState_value = map[string]int32{
	"SUBMITTED":    0,
	"CLEARED":      1,
	"PARTIAL_FILL": 2,
	"EXECUTED":     3,
	"CANCELED":     4,
	"EXPIRED":      5,
	"FAILED":       6,
}

func (x ServerOrderStateResponse_OrderState) String() string {
	return proto.EnumName(ServerOrderStateResponse_OrderState_name, int32(x))
}

func (ServerOrderStateResponse_OrderState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24, 0}
}

type ReserveAccountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveAccountRequest) Reset()         { *m = ReserveAccountRequest{} }
func (m *ReserveAccountRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveAccountRequest) ProtoMessage()    {}
func (*ReserveAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *ReserveAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveAccountRequest.Unmarshal(m, b)
}
func (m *ReserveAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveAccountRequest.Marshal(b, m, deterministic)
}
func (m *ReserveAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveAccountRequest.Merge(m, src)
}
func (m *ReserveAccountRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveAccountRequest.Size(m)
}
func (m *ReserveAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveAccountRequest proto.InternalMessageInfo

type ReserveAccountResponse struct {
	//
	//The base key of the auctioneer. This key should be tweaked with the trader's
	//per-batch tweaked key to obtain the corresponding per-batch tweaked
	//auctioneer key.
	AuctioneerKey []byte `protobuf:"bytes,1,opt,name=auctioneer_key,json=auctioneerKey,proto3" json:"auctioneer_key,omitempty"`
	//
	//The initial per-batch key to be used for the account. For every cleared
	//batch that the account participates in, this key will be incremented by the
	//base point of its curve, resulting in a new key for both the trader and
	//auctioneer in every batch.
	InitialBatchKey      []byte   `protobuf:"bytes,2,opt,name=initial_batch_key,json=initialBatchKey,proto3" json:"initial_batch_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveAccountResponse) Reset()         { *m = ReserveAccountResponse{} }
func (m *ReserveAccountResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveAccountResponse) ProtoMessage()    {}
func (*ReserveAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *ReserveAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveAccountResponse.Unmarshal(m, b)
}
func (m *ReserveAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveAccountResponse.Marshal(b, m, deterministic)
}
func (m *ReserveAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveAccountResponse.Merge(m, src)
}
func (m *ReserveAccountResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveAccountResponse.Size(m)
}
func (m *ReserveAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveAccountResponse proto.InternalMessageInfo

func (m *ReserveAccountResponse) GetAuctioneerKey() []byte {
	if m != nil {
		return m.AuctioneerKey
	}
	return nil
}

func (m *ReserveAccountResponse) GetInitialBatchKey() []byte {
	if m != nil {
		return m.InitialBatchKey
	}
	return nil
}

type ServerInitAccountRequest struct {
	//*
	//Transaction output of the account. Has to be unspent and be a P2WSH of
	//the account script below. The amount must also exactly correspond to the
	//account value below.
	AccountPoint *OutPoint `protobuf:"bytes,1,opt,name=account_point,json=accountPoint,proto3" json:"account_point,omitempty"`
	//*
	//The script used to create the account point.
	AccountScript []byte `protobuf:"bytes,2,opt,name=account_script,json=accountScript,proto3" json:"account_script,omitempty"`
	//*
	//The value of the account in satoshis. Must match the amount of the
	//account_point output.
	AccountValue uint32 `protobuf:"varint,3,opt,name=account_value,json=accountValue,proto3" json:"account_value,omitempty"`
	//*
	//The block height at which the account should expire.
	AccountExpiry uint32 `protobuf:"varint,4,opt,name=account_expiry,json=accountExpiry,proto3" json:"account_expiry,omitempty"`
	//*
	//The user's sub account key.
	UserSubKey           []byte   `protobuf:"bytes,5,opt,name=user_sub_key,json=userSubKey,proto3" json:"user_sub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInitAccountRequest) Reset()         { *m = ServerInitAccountRequest{} }
func (m *ServerInitAccountRequest) String() string { return proto.CompactTextString(m) }
func (*ServerInitAccountRequest) ProtoMessage()    {}
func (*ServerInitAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *ServerInitAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInitAccountRequest.Unmarshal(m, b)
}
func (m *ServerInitAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInitAccountRequest.Marshal(b, m, deterministic)
}
func (m *ServerInitAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInitAccountRequest.Merge(m, src)
}
func (m *ServerInitAccountRequest) XXX_Size() int {
	return xxx_messageInfo_ServerInitAccountRequest.Size(m)
}
func (m *ServerInitAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInitAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInitAccountRequest proto.InternalMessageInfo

func (m *ServerInitAccountRequest) GetAccountPoint() *OutPoint {
	if m != nil {
		return m.AccountPoint
	}
	return nil
}

func (m *ServerInitAccountRequest) GetAccountScript() []byte {
	if m != nil {
		return m.AccountScript
	}
	return nil
}

func (m *ServerInitAccountRequest) GetAccountValue() uint32 {
	if m != nil {
		return m.AccountValue
	}
	return 0
}

func (m *ServerInitAccountRequest) GetAccountExpiry() uint32 {
	if m != nil {
		return m.AccountExpiry
	}
	return 0
}

func (m *ServerInitAccountRequest) GetUserSubKey() []byte {
	if m != nil {
		return m.UserSubKey
	}
	return nil
}

type ServerInitAccountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInitAccountResponse) Reset()         { *m = ServerInitAccountResponse{} }
func (m *ServerInitAccountResponse) String() string { return proto.CompactTextString(m) }
func (*ServerInitAccountResponse) ProtoMessage()    {}
func (*ServerInitAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *ServerInitAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInitAccountResponse.Unmarshal(m, b)
}
func (m *ServerInitAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInitAccountResponse.Marshal(b, m, deterministic)
}
func (m *ServerInitAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInitAccountResponse.Merge(m, src)
}
func (m *ServerInitAccountResponse) XXX_Size() int {
	return xxx_messageInfo_ServerInitAccountResponse.Size(m)
}
func (m *ServerInitAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInitAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInitAccountResponse proto.InternalMessageInfo

type ServerSubmitOrderRequest struct {
	// Types that are valid to be assigned to Details:
	//	*ServerSubmitOrderRequest_Ask
	//	*ServerSubmitOrderRequest_Bid
	Details              isServerSubmitOrderRequest_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ServerSubmitOrderRequest) Reset()         { *m = ServerSubmitOrderRequest{} }
func (m *ServerSubmitOrderRequest) String() string { return proto.CompactTextString(m) }
func (*ServerSubmitOrderRequest) ProtoMessage()    {}
func (*ServerSubmitOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *ServerSubmitOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerSubmitOrderRequest.Unmarshal(m, b)
}
func (m *ServerSubmitOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerSubmitOrderRequest.Marshal(b, m, deterministic)
}
func (m *ServerSubmitOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerSubmitOrderRequest.Merge(m, src)
}
func (m *ServerSubmitOrderRequest) XXX_Size() int {
	return xxx_messageInfo_ServerSubmitOrderRequest.Size(m)
}
func (m *ServerSubmitOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerSubmitOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerSubmitOrderRequest proto.InternalMessageInfo

type isServerSubmitOrderRequest_Details interface {
	isServerSubmitOrderRequest_Details()
}

type ServerSubmitOrderRequest_Ask struct {
	Ask *ServerAsk `protobuf:"bytes,1,opt,name=ask,proto3,oneof"`
}

type ServerSubmitOrderRequest_Bid struct {
	Bid *ServerBid `protobuf:"bytes,2,opt,name=bid,proto3,oneof"`
}

func (*ServerSubmitOrderRequest_Ask) isServerSubmitOrderRequest_Details() {}

func (*ServerSubmitOrderRequest_Bid) isServerSubmitOrderRequest_Details() {}

func (m *ServerSubmitOrderRequest) GetDetails() isServerSubmitOrderRequest_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ServerSubmitOrderRequest) GetAsk() *ServerAsk {
	if x, ok := m.GetDetails().(*ServerSubmitOrderRequest_Ask); ok {
		return x.Ask
	}
	return nil
}

func (m *ServerSubmitOrderRequest) GetBid() *ServerBid {
	if x, ok := m.GetDetails().(*ServerSubmitOrderRequest_Bid); ok {
		return x.Bid
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServerSubmitOrderRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServerSubmitOrderRequest_Ask)(nil),
		(*ServerSubmitOrderRequest_Bid)(nil),
	}
}

type ServerSubmitOrderResponse struct {
	// Types that are valid to be assigned to Details:
	//	*ServerSubmitOrderResponse_InvalidOrder
	//	*ServerSubmitOrderResponse_Accepted
	Details              isServerSubmitOrderResponse_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ServerSubmitOrderResponse) Reset()         { *m = ServerSubmitOrderResponse{} }
func (m *ServerSubmitOrderResponse) String() string { return proto.CompactTextString(m) }
func (*ServerSubmitOrderResponse) ProtoMessage()    {}
func (*ServerSubmitOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *ServerSubmitOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerSubmitOrderResponse.Unmarshal(m, b)
}
func (m *ServerSubmitOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerSubmitOrderResponse.Marshal(b, m, deterministic)
}
func (m *ServerSubmitOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerSubmitOrderResponse.Merge(m, src)
}
func (m *ServerSubmitOrderResponse) XXX_Size() int {
	return xxx_messageInfo_ServerSubmitOrderResponse.Size(m)
}
func (m *ServerSubmitOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerSubmitOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerSubmitOrderResponse proto.InternalMessageInfo

type isServerSubmitOrderResponse_Details interface {
	isServerSubmitOrderResponse_Details()
}

type ServerSubmitOrderResponse_InvalidOrder struct {
	InvalidOrder *InvalidOrder `protobuf:"bytes,1,opt,name=invalid_order,json=invalidOrder,proto3,oneof"`
}

type ServerSubmitOrderResponse_Accepted struct {
	Accepted bool `protobuf:"varint,2,opt,name=accepted,proto3,oneof"`
}

func (*ServerSubmitOrderResponse_InvalidOrder) isServerSubmitOrderResponse_Details() {}

func (*ServerSubmitOrderResponse_Accepted) isServerSubmitOrderResponse_Details() {}

func (m *ServerSubmitOrderResponse) GetDetails() isServerSubmitOrderResponse_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ServerSubmitOrderResponse) GetInvalidOrder() *InvalidOrder {
	if x, ok := m.GetDetails().(*ServerSubmitOrderResponse_InvalidOrder); ok {
		return x.InvalidOrder
	}
	return nil
}

func (m *ServerSubmitOrderResponse) GetAccepted() bool {
	if x, ok := m.GetDetails().(*ServerSubmitOrderResponse_Accepted); ok {
		return x.Accepted
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServerSubmitOrderResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServerSubmitOrderResponse_InvalidOrder)(nil),
		(*ServerSubmitOrderResponse_Accepted)(nil),
	}
}

type ServerCancelOrderRequest struct {
	//*
	//The order's unique identifier.
	OrderNonce           []byte   `protobuf:"bytes,1,opt,name=order_nonce,json=orderNonce,proto3" json:"order_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerCancelOrderRequest) Reset()         { *m = ServerCancelOrderRequest{} }
func (m *ServerCancelOrderRequest) String() string { return proto.CompactTextString(m) }
func (*ServerCancelOrderRequest) ProtoMessage()    {}
func (*ServerCancelOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *ServerCancelOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerCancelOrderRequest.Unmarshal(m, b)
}
func (m *ServerCancelOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerCancelOrderRequest.Marshal(b, m, deterministic)
}
func (m *ServerCancelOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerCancelOrderRequest.Merge(m, src)
}
func (m *ServerCancelOrderRequest) XXX_Size() int {
	return xxx_messageInfo_ServerCancelOrderRequest.Size(m)
}
func (m *ServerCancelOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerCancelOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerCancelOrderRequest proto.InternalMessageInfo

func (m *ServerCancelOrderRequest) GetOrderNonce() []byte {
	if m != nil {
		return m.OrderNonce
	}
	return nil
}

type ServerCancelOrderResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerCancelOrderResponse) Reset()         { *m = ServerCancelOrderResponse{} }
func (m *ServerCancelOrderResponse) String() string { return proto.CompactTextString(m) }
func (*ServerCancelOrderResponse) ProtoMessage()    {}
func (*ServerCancelOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *ServerCancelOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerCancelOrderResponse.Unmarshal(m, b)
}
func (m *ServerCancelOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerCancelOrderResponse.Marshal(b, m, deterministic)
}
func (m *ServerCancelOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerCancelOrderResponse.Merge(m, src)
}
func (m *ServerCancelOrderResponse) XXX_Size() int {
	return xxx_messageInfo_ServerCancelOrderResponse.Size(m)
}
func (m *ServerCancelOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerCancelOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerCancelOrderResponse proto.InternalMessageInfo

type ClientAuctionMessage struct {
	// Types that are valid to be assigned to Msg:
	//	*ClientAuctionMessage_Prepare
	//	*ClientAuctionMessage_Accept
	//	*ClientAuctionMessage_Sign
	//	*ClientAuctionMessage_Finalize
	Msg                  isClientAuctionMessage_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ClientAuctionMessage) Reset()         { *m = ClientAuctionMessage{} }
func (m *ClientAuctionMessage) String() string { return proto.CompactTextString(m) }
func (*ClientAuctionMessage) ProtoMessage()    {}
func (*ClientAuctionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *ClientAuctionMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientAuctionMessage.Unmarshal(m, b)
}
func (m *ClientAuctionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientAuctionMessage.Marshal(b, m, deterministic)
}
func (m *ClientAuctionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientAuctionMessage.Merge(m, src)
}
func (m *ClientAuctionMessage) XXX_Size() int {
	return xxx_messageInfo_ClientAuctionMessage.Size(m)
}
func (m *ClientAuctionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientAuctionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientAuctionMessage proto.InternalMessageInfo

type isClientAuctionMessage_Msg interface {
	isClientAuctionMessage_Msg()
}

type ClientAuctionMessage_Prepare struct {
	Prepare *OrderMatchPrepare `protobuf:"bytes,1,opt,name=prepare,proto3,oneof"`
}

type ClientAuctionMessage_Accept struct {
	Accept *OrderMatchAccept `protobuf:"bytes,2,opt,name=accept,proto3,oneof"`
}

type ClientAuctionMessage_Sign struct {
	Sign *OrderMatchSign `protobuf:"bytes,3,opt,name=sign,proto3,oneof"`
}

type ClientAuctionMessage_Finalize struct {
	Finalize *OrderMatchFinalize `protobuf:"bytes,4,opt,name=finalize,proto3,oneof"`
}

func (*ClientAuctionMessage_Prepare) isClientAuctionMessage_Msg() {}

func (*ClientAuctionMessage_Accept) isClientAuctionMessage_Msg() {}

func (*ClientAuctionMessage_Sign) isClientAuctionMessage_Msg() {}

func (*ClientAuctionMessage_Finalize) isClientAuctionMessage_Msg() {}

func (m *ClientAuctionMessage) GetMsg() isClientAuctionMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *ClientAuctionMessage) GetPrepare() *OrderMatchPrepare {
	if x, ok := m.GetMsg().(*ClientAuctionMessage_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (m *ClientAuctionMessage) GetAccept() *OrderMatchAccept {
	if x, ok := m.GetMsg().(*ClientAuctionMessage_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *ClientAuctionMessage) GetSign() *OrderMatchSign {
	if x, ok := m.GetMsg().(*ClientAuctionMessage_Sign); ok {
		return x.Sign
	}
	return nil
}

func (m *ClientAuctionMessage) GetFinalize() *OrderMatchFinalize {
	if x, ok := m.GetMsg().(*ClientAuctionMessage_Finalize); ok {
		return x.Finalize
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientAuctionMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientAuctionMessage_Prepare)(nil),
		(*ClientAuctionMessage_Accept)(nil),
		(*ClientAuctionMessage_Sign)(nil),
		(*ClientAuctionMessage_Finalize)(nil),
	}
}

type OrderMatchPrepare struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMatchPrepare) Reset()         { *m = OrderMatchPrepare{} }
func (m *OrderMatchPrepare) String() string { return proto.CompactTextString(m) }
func (*OrderMatchPrepare) ProtoMessage()    {}
func (*OrderMatchPrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *OrderMatchPrepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMatchPrepare.Unmarshal(m, b)
}
func (m *OrderMatchPrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMatchPrepare.Marshal(b, m, deterministic)
}
func (m *OrderMatchPrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMatchPrepare.Merge(m, src)
}
func (m *OrderMatchPrepare) XXX_Size() int {
	return xxx_messageInfo_OrderMatchPrepare.Size(m)
}
func (m *OrderMatchPrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMatchPrepare.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMatchPrepare proto.InternalMessageInfo

type OrderMatchAccept struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMatchAccept) Reset()         { *m = OrderMatchAccept{} }
func (m *OrderMatchAccept) String() string { return proto.CompactTextString(m) }
func (*OrderMatchAccept) ProtoMessage()    {}
func (*OrderMatchAccept) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *OrderMatchAccept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMatchAccept.Unmarshal(m, b)
}
func (m *OrderMatchAccept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMatchAccept.Marshal(b, m, deterministic)
}
func (m *OrderMatchAccept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMatchAccept.Merge(m, src)
}
func (m *OrderMatchAccept) XXX_Size() int {
	return xxx_messageInfo_OrderMatchAccept.Size(m)
}
func (m *OrderMatchAccept) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMatchAccept.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMatchAccept proto.InternalMessageInfo

type OrderMatchSign struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMatchSign) Reset()         { *m = OrderMatchSign{} }
func (m *OrderMatchSign) String() string { return proto.CompactTextString(m) }
func (*OrderMatchSign) ProtoMessage()    {}
func (*OrderMatchSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *OrderMatchSign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMatchSign.Unmarshal(m, b)
}
func (m *OrderMatchSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMatchSign.Marshal(b, m, deterministic)
}
func (m *OrderMatchSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMatchSign.Merge(m, src)
}
func (m *OrderMatchSign) XXX_Size() int {
	return xxx_messageInfo_OrderMatchSign.Size(m)
}
func (m *OrderMatchSign) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMatchSign.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMatchSign proto.InternalMessageInfo

type OrderMatchFinalize struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMatchFinalize) Reset()         { *m = OrderMatchFinalize{} }
func (m *OrderMatchFinalize) String() string { return proto.CompactTextString(m) }
func (*OrderMatchFinalize) ProtoMessage()    {}
func (*OrderMatchFinalize) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *OrderMatchFinalize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMatchFinalize.Unmarshal(m, b)
}
func (m *OrderMatchFinalize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMatchFinalize.Marshal(b, m, deterministic)
}
func (m *OrderMatchFinalize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMatchFinalize.Merge(m, src)
}
func (m *OrderMatchFinalize) XXX_Size() int {
	return xxx_messageInfo_OrderMatchFinalize.Size(m)
}
func (m *OrderMatchFinalize) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMatchFinalize.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMatchFinalize proto.InternalMessageInfo

type ServerAuctionMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerAuctionMessage) Reset()         { *m = ServerAuctionMessage{} }
func (m *ServerAuctionMessage) String() string { return proto.CompactTextString(m) }
func (*ServerAuctionMessage) ProtoMessage()    {}
func (*ServerAuctionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *ServerAuctionMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerAuctionMessage.Unmarshal(m, b)
}
func (m *ServerAuctionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerAuctionMessage.Marshal(b, m, deterministic)
}
func (m *ServerAuctionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerAuctionMessage.Merge(m, src)
}
func (m *ServerAuctionMessage) XXX_Size() int {
	return xxx_messageInfo_ServerAuctionMessage.Size(m)
}
func (m *ServerAuctionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerAuctionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerAuctionMessage proto.InternalMessageInfo

type ServerOrder struct {
	//*
	//The user's sub key of the account to use for the order.
	UserSubKey []byte `protobuf:"bytes,1,opt,name=user_sub_key,json=userSubKey,proto3" json:"user_sub_key,omitempty"`
	//*
	//Fixed order rate in parts per million.
	RateFixed int64 `protobuf:"varint,2,opt,name=rate_fixed,json=rateFixed,proto3" json:"rate_fixed,omitempty"`
	//*
	//Order amount in satoshis.
	Amt int64 `protobuf:"varint,3,opt,name=amt,proto3" json:"amt,omitempty"`
	//*
	//Order nonce, acts as unique order identifier.
	OrderNonce []byte `protobuf:"bytes,6,opt,name=order_nonce,json=orderNonce,proto3" json:"order_nonce,omitempty"`
	//*
	//Signature of the order's digest, signed with the user's account key. The
	//signature must be fixed-size LN wire format encoded. Version 0 includes the
	//fields version, rate_fixed, amt, funding_fee_rate and
	//min/max_duration_blocks in the order digest.
	OrderSig []byte `protobuf:"bytes,7,opt,name=order_sig,json=orderSig,proto3" json:"order_sig,omitempty"`
	//*
	//The multi signature key of the node creating the order, will be used for the
	//target channel's funding TX 2-of-2 multi signature output.
	MultiSigKey []byte `protobuf:"bytes,8,opt,name=multi_sig_key,json=multiSigKey,proto3" json:"multi_sig_key,omitempty"`
	//*
	//The pubkey of the node creating the order.
	NodePub []byte `protobuf:"bytes,9,opt,name=node_pub,json=nodePub,proto3" json:"node_pub,omitempty"`
	//*
	//The network addresses of the node creating the order.
	NodeAddr []*NodeAddress `protobuf:"bytes,10,rep,name=node_addr,json=nodeAddr,proto3" json:"node_addr,omitempty"`
	//*
	//The type of the channel that should be opened.
	ChanType uint32 `protobuf:"varint,12,opt,name=chan_type,json=chanType,proto3" json:"chan_type,omitempty"`
	//*
	//Preferred fee rate to be used for the channel funding transaction, expressed
	//in satoshis per 1000 weight units (sat/kW).
	FundingFeeRate       int64    `protobuf:"varint,13,opt,name=funding_fee_rate,json=fundingFeeRate,proto3" json:"funding_fee_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerOrder) Reset()         { *m = ServerOrder{} }
func (m *ServerOrder) String() string { return proto.CompactTextString(m) }
func (*ServerOrder) ProtoMessage()    {}
func (*ServerOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14}
}

func (m *ServerOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerOrder.Unmarshal(m, b)
}
func (m *ServerOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerOrder.Marshal(b, m, deterministic)
}
func (m *ServerOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerOrder.Merge(m, src)
}
func (m *ServerOrder) XXX_Size() int {
	return xxx_messageInfo_ServerOrder.Size(m)
}
func (m *ServerOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ServerOrder proto.InternalMessageInfo

func (m *ServerOrder) GetUserSubKey() []byte {
	if m != nil {
		return m.UserSubKey
	}
	return nil
}

func (m *ServerOrder) GetRateFixed() int64 {
	if m != nil {
		return m.RateFixed
	}
	return 0
}

func (m *ServerOrder) GetAmt() int64 {
	if m != nil {
		return m.Amt
	}
	return 0
}

func (m *ServerOrder) GetOrderNonce() []byte {
	if m != nil {
		return m.OrderNonce
	}
	return nil
}

func (m *ServerOrder) GetOrderSig() []byte {
	if m != nil {
		return m.OrderSig
	}
	return nil
}

func (m *ServerOrder) GetMultiSigKey() []byte {
	if m != nil {
		return m.MultiSigKey
	}
	return nil
}

func (m *ServerOrder) GetNodePub() []byte {
	if m != nil {
		return m.NodePub
	}
	return nil
}

func (m *ServerOrder) GetNodeAddr() []*NodeAddress {
	if m != nil {
		return m.NodeAddr
	}
	return nil
}

func (m *ServerOrder) GetChanType() uint32 {
	if m != nil {
		return m.ChanType
	}
	return 0
}

func (m *ServerOrder) GetFundingFeeRate() int64 {
	if m != nil {
		return m.FundingFeeRate
	}
	return 0
}

type ServerBid struct {
	//*
	//The common fields shared between both ask and bid order types.
	Details *ServerOrder `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	//*
	//Required minimum number of blocks that a channel opened as a result of this
	//bid should be kept open.
	MinDurationBlocks int64 `protobuf:"varint,2,opt,name=min_duration_blocks,json=minDurationBlocks,proto3" json:"min_duration_blocks,omitempty"`
	//*
	//The version of the order format that is used. Will be increased once new
	//features are added.
	Version              uint32   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerBid) Reset()         { *m = ServerBid{} }
func (m *ServerBid) String() string { return proto.CompactTextString(m) }
func (*ServerBid) ProtoMessage()    {}
func (*ServerBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15}
}

func (m *ServerBid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerBid.Unmarshal(m, b)
}
func (m *ServerBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerBid.Marshal(b, m, deterministic)
}
func (m *ServerBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerBid.Merge(m, src)
}
func (m *ServerBid) XXX_Size() int {
	return xxx_messageInfo_ServerBid.Size(m)
}
func (m *ServerBid) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerBid.DiscardUnknown(m)
}

var xxx_messageInfo_ServerBid proto.InternalMessageInfo

func (m *ServerBid) GetDetails() *ServerOrder {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ServerBid) GetMinDurationBlocks() int64 {
	if m != nil {
		return m.MinDurationBlocks
	}
	return 0
}

func (m *ServerBid) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ServerAsk struct {
	//*
	//The common fields shared between both ask and bid order types.
	Details *ServerOrder `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	//*
	//The maximum number of blocks the liquidity provider is willing to provide
	//the channel funds for.
	MaxDurationBlocks int64 `protobuf:"varint,4,opt,name=max_duration_blocks,json=maxDurationBlocks,proto3" json:"max_duration_blocks,omitempty"`
	//*
	//The version of the order format that is used. Will be increased once new
	//features are added.
	Version              uint32   `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerAsk) Reset()         { *m = ServerAsk{} }
func (m *ServerAsk) String() string { return proto.CompactTextString(m) }
func (*ServerAsk) ProtoMessage()    {}
func (*ServerAsk) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{16}
}

func (m *ServerAsk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerAsk.Unmarshal(m, b)
}
func (m *ServerAsk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerAsk.Marshal(b, m, deterministic)
}
func (m *ServerAsk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerAsk.Merge(m, src)
}
func (m *ServerAsk) XXX_Size() int {
	return xxx_messageInfo_ServerAsk.Size(m)
}
func (m *ServerAsk) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerAsk.DiscardUnknown(m)
}

var xxx_messageInfo_ServerAsk proto.InternalMessageInfo

func (m *ServerAsk) GetDetails() *ServerOrder {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ServerAsk) GetMaxDurationBlocks() int64 {
	if m != nil {
		return m.MaxDurationBlocks
	}
	return 0
}

func (m *ServerAsk) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CancelOrder struct {
	OrderNonce           []byte   `protobuf:"bytes,1,opt,name=order_nonce,json=orderNonce,proto3" json:"order_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrder) Reset()         { *m = CancelOrder{} }
func (m *CancelOrder) String() string { return proto.CompactTextString(m) }
func (*CancelOrder) ProtoMessage()    {}
func (*CancelOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17}
}

func (m *CancelOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrder.Unmarshal(m, b)
}
func (m *CancelOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrder.Marshal(b, m, deterministic)
}
func (m *CancelOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrder.Merge(m, src)
}
func (m *CancelOrder) XXX_Size() int {
	return xxx_messageInfo_CancelOrder.Size(m)
}
func (m *CancelOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrder proto.InternalMessageInfo

func (m *CancelOrder) GetOrderNonce() []byte {
	if m != nil {
		return m.OrderNonce
	}
	return nil
}

type InvalidOrder struct {
	OrderNonce           []byte                  `protobuf:"bytes,1,opt,name=order_nonce,json=orderNonce,proto3" json:"order_nonce,omitempty"`
	FailReason           InvalidOrder_FailReason `protobuf:"varint,2,opt,name=fail_reason,json=failReason,proto3,enum=clmrpc.InvalidOrder_FailReason" json:"fail_reason,omitempty"`
	FailString           string                  `protobuf:"bytes,3,opt,name=fail_string,json=failString,proto3" json:"fail_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InvalidOrder) Reset()         { *m = InvalidOrder{} }
func (m *InvalidOrder) String() string { return proto.CompactTextString(m) }
func (*InvalidOrder) ProtoMessage()    {}
func (*InvalidOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{18}
}

func (m *InvalidOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidOrder.Unmarshal(m, b)
}
func (m *InvalidOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidOrder.Marshal(b, m, deterministic)
}
func (m *InvalidOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidOrder.Merge(m, src)
}
func (m *InvalidOrder) XXX_Size() int {
	return xxx_messageInfo_InvalidOrder.Size(m)
}
func (m *InvalidOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidOrder.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidOrder proto.InternalMessageInfo

func (m *InvalidOrder) GetOrderNonce() []byte {
	if m != nil {
		return m.OrderNonce
	}
	return nil
}

func (m *InvalidOrder) GetFailReason() InvalidOrder_FailReason {
	if m != nil {
		return m.FailReason
	}
	return InvalidOrder_INVALID_AMT
}

func (m *InvalidOrder) GetFailString() string {
	if m != nil {
		return m.FailString
	}
	return ""
}

type Input struct {
	// The outpoint that the input corresponds to.
	Outpoint             *OutPoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{19}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetOutpoint() *OutPoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

type Output struct {
	// The value, in satoshis, of the output.
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// The script of the output to send the value to.
	Script               []byte   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Output) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

type ServerModifyAccountRequest struct {
	//
	//The user sub key that corresponds to the account to be modified. This is
	//also known as the trader key.
	UserSubKey []byte `protobuf:"bytes,1,opt,name=user_sub_key,json=userSubKey,proto3" json:"user_sub_key,omitempty"`
	//
	//An additional set of inputs that can be included in the spending transaction
	//of an account. These can be used to deposit more funds into an account.
	//These must be under control of the backing lnd node's wallet.
	NewInputs []*Input `protobuf:"bytes,2,rep,name=new_inputs,json=newInputs,proto3" json:"new_inputs,omitempty"`
	//
	//An additional set of outputs that can be included in the spending
	//transaction of an account. These can be used to withdraw funds from an
	//account.
	NewOutputs []*Output `protobuf:"bytes,3,rep,name=new_outputs,json=newOutputs,proto3" json:"new_outputs,omitempty"`
	// The new parameters to apply for the account.
	NewAccount           *ServerInitAccountRequest `protobuf:"bytes,5,opt,name=new_account,json=newAccount,proto3" json:"new_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ServerModifyAccountRequest) Reset()         { *m = ServerModifyAccountRequest{} }
func (m *ServerModifyAccountRequest) String() string { return proto.CompactTextString(m) }
func (*ServerModifyAccountRequest) ProtoMessage()    {}
func (*ServerModifyAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{21}
}

func (m *ServerModifyAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerModifyAccountRequest.Unmarshal(m, b)
}
func (m *ServerModifyAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerModifyAccountRequest.Marshal(b, m, deterministic)
}
func (m *ServerModifyAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerModifyAccountRequest.Merge(m, src)
}
func (m *ServerModifyAccountRequest) XXX_Size() int {
	return xxx_messageInfo_ServerModifyAccountRequest.Size(m)
}
func (m *ServerModifyAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerModifyAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerModifyAccountRequest proto.InternalMessageInfo

func (m *ServerModifyAccountRequest) GetUserSubKey() []byte {
	if m != nil {
		return m.UserSubKey
	}
	return nil
}

func (m *ServerModifyAccountRequest) GetNewInputs() []*Input {
	if m != nil {
		return m.NewInputs
	}
	return nil
}

func (m *ServerModifyAccountRequest) GetNewOutputs() []*Output {
	if m != nil {
		return m.NewOutputs
	}
	return nil
}

func (m *ServerModifyAccountRequest) GetNewAccount() *ServerInitAccountRequest {
	if m != nil {
		return m.NewAccount
	}
	return nil
}

type ServerModifyAccountResponse struct {
	//*
	//The auctioneer's signature that allows a trader to broadcast a transaction
	//spending from an account output.
	AccountSig           []byte   `protobuf:"bytes,1,opt,name=account_sig,json=accountSig,proto3" json:"account_sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerModifyAccountResponse) Reset()         { *m = ServerModifyAccountResponse{} }
func (m *ServerModifyAccountResponse) String() string { return proto.CompactTextString(m) }
func (*ServerModifyAccountResponse) ProtoMessage()    {}
func (*ServerModifyAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{22}
}

func (m *ServerModifyAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerModifyAccountResponse.Unmarshal(m, b)
}
func (m *ServerModifyAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerModifyAccountResponse.Marshal(b, m, deterministic)
}
func (m *ServerModifyAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerModifyAccountResponse.Merge(m, src)
}
func (m *ServerModifyAccountResponse) XXX_Size() int {
	return xxx_messageInfo_ServerModifyAccountResponse.Size(m)
}
func (m *ServerModifyAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerModifyAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerModifyAccountResponse proto.InternalMessageInfo

func (m *ServerModifyAccountResponse) GetAccountSig() []byte {
	if m != nil {
		return m.AccountSig
	}
	return nil
}

type ServerOrderStateRequest struct {
	OrderNonce           []byte   `protobuf:"bytes,1,opt,name=order_nonce,json=orderNonce,proto3" json:"order_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerOrderStateRequest) Reset()         { *m = ServerOrderStateRequest{} }
func (m *ServerOrderStateRequest) String() string { return proto.CompactTextString(m) }
func (*ServerOrderStateRequest) ProtoMessage()    {}
func (*ServerOrderStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23}
}

func (m *ServerOrderStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerOrderStateRequest.Unmarshal(m, b)
}
func (m *ServerOrderStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerOrderStateRequest.Marshal(b, m, deterministic)
}
func (m *ServerOrderStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerOrderStateRequest.Merge(m, src)
}
func (m *ServerOrderStateRequest) XXX_Size() int {
	return xxx_messageInfo_ServerOrderStateRequest.Size(m)
}
func (m *ServerOrderStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerOrderStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerOrderStateRequest proto.InternalMessageInfo

func (m *ServerOrderStateRequest) GetOrderNonce() []byte {
	if m != nil {
		return m.OrderNonce
	}
	return nil
}

type ServerOrderStateResponse struct {
	//*
	//The state the order currently is in.
	State ServerOrderStateResponse_OrderState `protobuf:"varint,1,opt,name=state,proto3,enum=clmrpc.ServerOrderStateResponse_OrderState" json:"state,omitempty"`
	//*
	//The number of currently unfilled units of this order. This will be equal to
	//the total amount of units until the order has reached the state PARTIAL_FILL
	//or EXECUTED.
	UnitsUnfulfilled     uint32   `protobuf:"varint,2,opt,name=units_unfulfilled,json=unitsUnfulfilled,proto3" json:"units_unfulfilled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerOrderStateResponse) Reset()         { *m = ServerOrderStateResponse{} }
func (m *ServerOrderStateResponse) String() string { return proto.CompactTextString(m) }
func (*ServerOrderStateResponse) ProtoMessage()    {}
func (*ServerOrderStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24}
}

func (m *ServerOrderStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerOrderStateResponse.Unmarshal(m, b)
}
func (m *ServerOrderStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerOrderStateResponse.Marshal(b, m, deterministic)
}
func (m *ServerOrderStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerOrderStateResponse.Merge(m, src)
}
func (m *ServerOrderStateResponse) XXX_Size() int {
	return xxx_messageInfo_ServerOrderStateResponse.Size(m)
}
func (m *ServerOrderStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerOrderStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerOrderStateResponse proto.InternalMessageInfo

func (m *ServerOrderStateResponse) GetState() ServerOrderStateResponse_OrderState {
	if m != nil {
		return m.State
	}
	return ServerOrderStateResponse_SUBMITTED
}

func (m *ServerOrderStateResponse) GetUnitsUnfulfilled() uint32 {
	if m != nil {
		return m.UnitsUnfulfilled
	}
	return 0
}

type NodeAddress struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAddress) Reset()         { *m = NodeAddress{} }
func (m *NodeAddress) String() string { return proto.CompactTextString(m) }
func (*NodeAddress) ProtoMessage()    {}
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{25}
}

func (m *NodeAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAddress.Unmarshal(m, b)
}
func (m *NodeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAddress.Marshal(b, m, deterministic)
}
func (m *NodeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAddress.Merge(m, src)
}
func (m *NodeAddress) XXX_Size() int {
	return xxx_messageInfo_NodeAddress.Size(m)
}
func (m *NodeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAddress proto.InternalMessageInfo

func (m *NodeAddress) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NodeAddress) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type OutPoint struct {
	//*
	//Raw bytes representing the transaction id.
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	//*
	//The index of the output on the transaction.
	OutputIndex          uint32   `protobuf:"varint,2,opt,name=output_index,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutPoint) Reset()         { *m = OutPoint{} }
func (m *OutPoint) String() string { return proto.CompactTextString(m) }
func (*OutPoint) ProtoMessage()    {}
func (*OutPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{26}
}

func (m *OutPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutPoint.Unmarshal(m, b)
}
func (m *OutPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutPoint.Marshal(b, m, deterministic)
}
func (m *OutPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutPoint.Merge(m, src)
}
func (m *OutPoint) XXX_Size() int {
	return xxx_messageInfo_OutPoint.Size(m)
}
func (m *OutPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_OutPoint.DiscardUnknown(m)
}

var xxx_messageInfo_OutPoint proto.InternalMessageInfo

func (m *OutPoint) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *OutPoint) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

func init() {
	proto.RegisterEnum("clmrpc.InvalidOrder_FailReason", InvalidOrder_FailReason_name, InvalidOrder_FailReason_value)
	proto.RegisterEnum("clmrpc.ServerOrderStateResponse_OrderState", ServerOrderStateResponse_OrderState_name, ServerOrderStateResponse_OrderState_value)
	proto.RegisterType((*ReserveAccountRequest)(nil), "clmrpc.ReserveAccountRequest")
	proto.RegisterType((*ReserveAccountResponse)(nil), "clmrpc.ReserveAccountResponse")
	proto.RegisterType((*ServerInitAccountRequest)(nil), "clmrpc.ServerInitAccountRequest")
	proto.RegisterType((*ServerInitAccountResponse)(nil), "clmrpc.ServerInitAccountResponse")
	proto.RegisterType((*ServerSubmitOrderRequest)(nil), "clmrpc.ServerSubmitOrderRequest")
	proto.RegisterType((*ServerSubmitOrderResponse)(nil), "clmrpc.ServerSubmitOrderResponse")
	proto.RegisterType((*ServerCancelOrderRequest)(nil), "clmrpc.ServerCancelOrderRequest")
	proto.RegisterType((*ServerCancelOrderResponse)(nil), "clmrpc.ServerCancelOrderResponse")
	proto.RegisterType((*ClientAuctionMessage)(nil), "clmrpc.ClientAuctionMessage")
	proto.RegisterType((*OrderMatchPrepare)(nil), "clmrpc.OrderMatchPrepare")
	proto.RegisterType((*OrderMatchAccept)(nil), "clmrpc.OrderMatchAccept")
	proto.RegisterType((*OrderMatchSign)(nil), "clmrpc.OrderMatchSign")
	proto.RegisterType((*OrderMatchFinalize)(nil), "clmrpc.OrderMatchFinalize")
	proto.RegisterType((*ServerAuctionMessage)(nil), "clmrpc.ServerAuctionMessage")
	proto.RegisterType((*ServerOrder)(nil), "clmrpc.ServerOrder")
	proto.RegisterType((*ServerBid)(nil), "clmrpc.ServerBid")
	proto.RegisterType((*ServerAsk)(nil), "clmrpc.ServerAsk")
	proto.RegisterType((*CancelOrder)(nil), "clmrpc.CancelOrder")
	proto.RegisterType((*InvalidOrder)(nil), "clmrpc.InvalidOrder")
	proto.RegisterType((*Input)(nil), "clmrpc.Input")
	proto.RegisterType((*Output)(nil), "clmrpc.Output")
	proto.RegisterType((*ServerModifyAccountRequest)(nil), "clmrpc.ServerModifyAccountRequest")
	proto.RegisterType((*ServerModifyAccountResponse)(nil), "clmrpc.ServerModifyAccountResponse")
	proto.RegisterType((*ServerOrderStateRequest)(nil), "clmrpc.ServerOrderStateRequest")
	proto.RegisterType((*ServerOrderStateResponse)(nil), "clmrpc.ServerOrderStateResponse")
	proto.RegisterType((*NodeAddress)(nil), "clmrpc.NodeAddress")
	proto.RegisterType((*OutPoint)(nil), "clmrpc.OutPoint")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 1430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x4f, 0x6f, 0xdb, 0xc6,
	0x12, 0x97, 0xac, 0x3f, 0xa6, 0x86, 0x92, 0x43, 0xaf, 0x1d, 0x47, 0x71, 0x9c, 0x67, 0x3f, 0x06,
	0x01, 0x8c, 0x97, 0x3c, 0x27, 0x50, 0x91, 0xa2, 0x68, 0x80, 0xa2, 0xb4, 0x2d, 0xc3, 0x72, 0xfc,
	0x0f, 0x94, 0x93, 0xe6, 0x46, 0xac, 0xc4, 0x95, 0xb2, 0x30, 0xbd, 0x64, 0xb9, 0x4b, 0xc7, 0xee,
	0xad, 0x40, 0x4f, 0xfd, 0x36, 0xfd, 0x46, 0x3d, 0x15, 0x45, 0x4f, 0xbd, 0xf7, 0x52, 0xec, 0x72,
	0x29, 0x89, 0x92, 0x12, 0x17, 0xbd, 0x71, 0x7f, 0xf3, 0x9b, 0xd9, 0x99, 0xd9, 0xd9, 0xd9, 0x21,
	0xd4, 0x39, 0x89, 0xaf, 0x49, 0xbc, 0x13, 0xc5, 0xa1, 0x08, 0x51, 0xb5, 0x1f, 0x5c, 0xc5, 0x51,
	0x7f, 0x7d, 0x63, 0x18, 0x86, 0xc3, 0x80, 0xbc, 0xc0, 0x11, 0x7d, 0x81, 0x19, 0x0b, 0x05, 0x16,
	0x34, 0x64, 0x3c, 0x65, 0xd9, 0x0f, 0xe0, 0xbe, 0x4b, 0x94, 0x9e, 0xd3, 0xef, 0x87, 0x09, 0x13,
	0x2e, 0xf9, 0x3e, 0x21, 0x5c, 0xd8, 0x97, 0xb0, 0x36, 0x2d, 0xe0, 0x51, 0xc8, 0x38, 0x41, 0x4f,
	0x61, 0x09, 0x27, 0x7d, 0x69, 0x84, 0x90, 0xd8, 0xbb, 0x24, 0xb7, 0xcd, 0xe2, 0x56, 0x71, 0xbb,
	0xee, 0x36, 0xc6, 0xe8, 0x1b, 0x72, 0x8b, 0xfe, 0x07, 0xcb, 0x94, 0x51, 0x41, 0x71, 0xe0, 0xf5,
	0xb0, 0xe8, 0x7f, 0x50, 0xcc, 0x05, 0xc5, 0xbc, 0xa7, 0x05, 0xbb, 0x12, 0x7f, 0x43, 0x6e, 0xed,
	0xdf, 0x8a, 0xd0, 0xec, 0x2a, 0xe7, 0x3b, 0x8c, 0x8a, 0xbc, 0x27, 0xe8, 0x15, 0x34, 0x70, 0x8a,
	0x78, 0x51, 0x48, 0x99, 0x50, 0xdb, 0x99, 0x2d, 0x6b, 0x27, 0x0d, 0x70, 0xe7, 0x2c, 0x11, 0xe7,
	0x12, 0x77, 0xeb, 0x9a, 0xa6, 0x56, 0xca, 0x4d, 0xad, 0xc6, 0xfb, 0x31, 0x8d, 0x84, 0xde, 0x3c,
	0x33, 0xd6, 0x55, 0x20, 0x7a, 0x32, 0xb6, 0x7e, 0x8d, 0x83, 0x84, 0x34, 0x4b, 0x5b, 0xc5, 0xed,
	0xc6, 0xc8, 0xd6, 0x3b, 0x89, 0x4d, 0xda, 0x22, 0x37, 0x11, 0x8d, 0x6f, 0x9b, 0x65, 0xc5, 0xca,
	0x54, 0xdb, 0x0a, 0x44, 0x5b, 0x50, 0x4f, 0x38, 0x89, 0x3d, 0x9e, 0xf4, 0x54, 0xb4, 0x15, 0xb5,
	0x21, 0x48, 0xac, 0x9b, 0xf4, 0x64, 0xa0, 0x8f, 0xe0, 0xe1, 0x9c, 0x38, 0xd3, 0xc4, 0xda, 0x3c,
	0x4b, 0x42, 0x37, 0xe9, 0x5d, 0x51, 0x71, 0x16, 0xfb, 0x24, 0xce, 0x92, 0xf0, 0x14, 0x4a, 0x98,
	0x5f, 0xea, 0xd0, 0x97, 0xb3, 0xd0, 0x53, 0xba, 0xc3, 0x2f, 0x0f, 0x0b, 0xae, 0x94, 0x4b, 0x5a,
	0x8f, 0xfa, 0x2a, 0xd2, 0x19, 0xda, 0x2e, 0xf5, 0x25, 0xad, 0x47, 0xfd, 0xdd, 0x1a, 0x2c, 0xfa,
	0x44, 0x60, 0x1a, 0x70, 0xfb, 0xc7, 0x62, 0xe6, 0x52, 0x6e, 0x57, 0x7d, 0xd6, 0xaf, 0xa1, 0x41,
	0xd9, 0x35, 0x0e, 0xa8, 0xef, 0x85, 0x52, 0xa0, 0x1d, 0x58, 0xcd, 0x2c, 0x77, 0x52, 0xa1, 0x52,
	0x3a, 0x2c, 0xb8, 0x75, 0x3a, 0xb1, 0x46, 0x1b, 0x60, 0xe0, 0x7e, 0x9f, 0x44, 0x82, 0xa4, 0x1e,
	0x19, 0x87, 0x05, 0x77, 0x84, 0x4c, 0xfa, 0xf0, 0x3a, 0x0b, 0x7c, 0x0f, 0xb3, 0x3e, 0x09, 0x72,
	0x81, 0x6f, 0x82, 0xa9, 0x76, 0xf6, 0x58, 0xc8, 0xfa, 0x44, 0x97, 0x1a, 0x28, 0xe8, 0x54, 0x22,
	0xe3, 0x94, 0xe6, 0x94, 0x75, 0x4a, 0xff, 0x2c, 0xc2, 0xea, 0x5e, 0x40, 0x09, 0x13, 0x4e, 0x5a,
	0x9c, 0x27, 0x84, 0x73, 0x3c, 0x24, 0xe8, 0x15, 0x2c, 0x46, 0x31, 0x89, 0x70, 0x4c, 0x74, 0x48,
	0x0f, 0x47, 0xe5, 0x24, 0x0d, 0x9c, 0xc8, 0xca, 0x3c, 0x4f, 0x09, 0x87, 0x05, 0x37, 0xe3, 0xa2,
	0x16, 0x54, 0xd3, 0x00, 0x74, 0x8a, 0x9b, 0xb3, 0x5a, 0x8e, 0x92, 0x1f, 0x16, 0x5c, 0xcd, 0x44,
	0xcf, 0xa1, 0xcc, 0xe9, 0x90, 0xa9, 0xc2, 0x32, 0x5b, 0x6b, 0xb3, 0x1a, 0x5d, 0x3a, 0x64, 0x87,
	0x05, 0x57, 0xb1, 0xd0, 0x57, 0x60, 0x0c, 0x28, 0xc3, 0x01, 0xfd, 0x81, 0xa8, 0x22, 0x33, 0x5b,
	0xeb, 0xb3, 0x1a, 0x07, 0x9a, 0x21, 0x13, 0x9a, 0xb1, 0x77, 0x2b, 0x50, 0xba, 0xe2, 0x43, 0x7b,
	0x05, 0x96, 0x67, 0x42, 0xb0, 0x11, 0x58, 0xd3, 0x1e, 0xda, 0x16, 0x2c, 0xe5, 0x7d, 0xb0, 0x57,
	0x01, 0xcd, 0xee, 0x61, 0xaf, 0xc1, 0xaa, 0xae, 0xb3, 0x5c, 0x0a, 0xed, 0xdf, 0x17, 0xc0, 0x4c,
	0x05, 0xe9, 0x71, 0x4f, 0x57, 0x7f, 0x71, 0xba, 0xfa, 0xd1, 0x63, 0x80, 0x18, 0x0b, 0xe2, 0x0d,
	0xe8, 0x8d, 0x2e, 0x89, 0x92, 0x5b, 0x93, 0xc8, 0x81, 0x04, 0x90, 0x05, 0x25, 0x7c, 0x25, 0x54,
	0x9e, 0x4a, 0xae, 0xfc, 0x9c, 0x3e, 0xfc, 0xea, 0xf4, 0xe1, 0xa3, 0x47, 0x50, 0x4b, 0x09, 0x9c,
	0x0e, 0x9b, 0x8b, 0x4a, 0x6c, 0x28, 0xa0, 0x4b, 0x87, 0xc8, 0x86, 0xc6, 0x55, 0x12, 0x08, 0x2a,
	0x85, 0xca, 0x23, 0x43, 0x11, 0x4c, 0x05, 0x76, 0xe9, 0x50, 0xba, 0xf4, 0x10, 0x0c, 0x16, 0xfa,
	0xc4, 0x8b, 0x92, 0x5e, 0xb3, 0xa6, 0xc4, 0x8b, 0x72, 0x7d, 0x9e, 0xf4, 0xd0, 0x4b, 0xa8, 0x29,
	0x11, 0xf6, 0xfd, 0xb8, 0x09, 0x5b, 0xa5, 0x6d, 0xb3, 0xb5, 0x92, 0x1d, 0xc5, 0x69, 0xe8, 0x13,
	0xc7, 0xf7, 0x63, 0xc2, 0xb9, 0xab, 0x0c, 0xc8, 0x85, 0xf4, 0xa6, 0xff, 0x01, 0x33, 0x4f, 0xdc,
	0x46, 0xa4, 0x59, 0x57, 0x1d, 0xc2, 0x90, 0xc0, 0xc5, 0x6d, 0x44, 0xd0, 0x36, 0x58, 0x83, 0x84,
	0xf9, 0x94, 0x0d, 0xbd, 0x01, 0x21, 0x9e, 0x0c, 0xbb, 0xd9, 0x50, 0xa1, 0x2e, 0x69, 0xfc, 0x80,
	0x10, 0x17, 0x0b, 0x72, 0x54, 0x36, 0xca, 0x56, 0xe5, 0xa8, 0x6c, 0x54, 0xac, 0xea, 0x51, 0xd9,
	0x30, 0xad, 0xba, 0xfd, 0x73, 0x11, 0x6a, 0xa3, 0x4b, 0x8c, 0xfe, 0x3f, 0xba, 0x39, 0xba, 0x76,
	0x57, 0xf2, 0x17, 0x3d, 0xbd, 0x02, 0x19, 0x07, 0xed, 0xc0, 0xca, 0x15, 0x65, 0x9e, 0x9f, 0xc4,
	0xaa, 0xf3, 0x7b, 0xbd, 0x20, 0xec, 0x5f, 0x72, 0x9d, 0xfe, 0xe5, 0x2b, 0xca, 0xf6, 0xb5, 0x64,
	0x57, 0x09, 0x50, 0x13, 0x16, 0xaf, 0x49, 0xcc, 0x69, 0xc8, 0x74, 0x97, 0xcb, 0x96, 0x47, 0x65,
	0xa3, 0x64, 0x95, 0xed, 0x9f, 0x46, 0xce, 0x38, 0xfc, 0xf2, 0xdf, 0x38, 0x83, 0x6f, 0x66, 0x9c,
	0x29, 0x6b, 0x67, 0xf0, 0xcd, 0xa7, 0x9d, 0xa9, 0xe4, 0x9c, 0xb1, 0x77, 0xc0, 0x9c, 0xb8, 0xf1,
	0x77, 0xf7, 0x89, 0x5f, 0x8a, 0x50, 0x9f, 0x6c, 0x57, 0x77, 0x6a, 0xa0, 0x6f, 0xc1, 0x1c, 0x60,
	0x1a, 0x78, 0x31, 0xc1, 0x3c, 0x64, 0x2a, 0x61, 0x4b, 0xad, 0xcd, 0x79, 0xad, 0x6f, 0xe7, 0x00,
	0xd3, 0xc0, 0x55, 0x34, 0x17, 0x06, 0xa3, 0x6f, 0xb9, 0x85, 0xb2, 0xc0, 0x45, 0x4c, 0xd9, 0x50,
	0x55, 0x76, 0x2d, 0x25, 0x74, 0x15, 0x62, 0x3f, 0x06, 0x18, 0xab, 0xa2, 0x7b, 0x60, 0x76, 0x4e,
	0xdf, 0x39, 0xc7, 0x9d, 0x7d, 0xcf, 0x39, 0xb9, 0xb0, 0x0a, 0xf6, 0x2b, 0xa8, 0x74, 0x58, 0x94,
	0xc8, 0x1e, 0x62, 0x84, 0x89, 0xf8, 0xfc, 0xf3, 0x37, 0x62, 0xd8, 0x5f, 0x42, 0xf5, 0x2c, 0x11,
	0x52, 0x6f, 0x15, 0x2a, 0xe9, 0xab, 0x56, 0x54, 0xc9, 0x4b, 0x17, 0x68, 0x0d, 0xaa, 0xb9, 0x27,
	0x51, 0xaf, 0xec, 0x5f, 0x8b, 0xb0, 0x9e, 0x9e, 0xda, 0x49, 0xe8, 0xd3, 0xc1, 0xed, 0xd4, 0x43,
	0x7c, 0xf7, 0x05, 0x7f, 0x0e, 0xc0, 0xc8, 0x47, 0x8f, 0x4a, 0x9f, 0x65, 0x85, 0xc9, 0x3b, 0xd3,
	0x18, 0x27, 0x2c, 0x4a, 0x84, 0x5b, 0x63, 0xe4, 0xa3, 0xfa, 0xe2, 0xe8, 0x05, 0x98, 0x92, 0x1d,
	0x2a, 0x57, 0x79, 0xb3, 0xa4, 0xe8, 0x4b, 0x13, 0x71, 0x49, 0xbe, 0x34, 0x98, 0x7e, 0x72, 0xe4,
	0xa4, 0x0a, 0xfa, 0xd1, 0x55, 0x05, 0x61, 0xb6, 0xb6, 0xf2, 0xf5, 0x36, 0x3b, 0x40, 0x28, 0x13,
	0x1a, 0xb2, 0xbf, 0x81, 0x47, 0x73, 0x23, 0xd4, 0xef, 0xdd, 0x26, 0x98, 0xa3, 0xa1, 0x81, 0x0e,
	0xb3, 0x08, 0xb3, 0x89, 0x81, 0x0e, 0xed, 0xaf, 0xe1, 0xc1, 0x44, 0x5d, 0x77, 0x05, 0x16, 0xe4,
	0x1f, 0xbf, 0x54, 0x7f, 0x8d, 0xa6, 0x9c, 0x49, 0x65, 0xbd, 0xb3, 0x03, 0x15, 0x2e, 0x01, 0xa5,
	0xb7, 0xd4, 0x7a, 0x36, 0xe7, 0x16, 0xe5, 0x14, 0x76, 0x26, 0xa0, 0x54, 0x13, 0x3d, 0x83, 0xe5,
	0x84, 0x51, 0xc1, 0xbd, 0x84, 0x0d, 0x92, 0x60, 0x40, 0x83, 0x40, 0x77, 0xd9, 0x86, 0x6b, 0x29,
	0xc1, 0xdb, 0x31, 0x6e, 0x87, 0x00, 0x63, 0x0b, 0xa8, 0x01, 0xb5, 0xee, 0xdb, 0xdd, 0x93, 0xce,
	0xc5, 0x45, 0x7b, 0xdf, 0x2a, 0x20, 0x13, 0x16, 0xf7, 0x8e, 0xdb, 0x8e, 0xdb, 0xde, 0xb7, 0x8a,
	0xc8, 0x82, 0xfa, 0xb9, 0xe3, 0x5e, 0x74, 0x9c, 0x63, 0xef, 0xa0, 0x73, 0x7c, 0x6c, 0x2d, 0xa0,
	0x3a, 0x18, 0xed, 0xf7, 0xed, 0xbd, 0xb7, 0x92, 0x5c, 0x92, 0xab, 0x3d, 0xe7, 0x74, 0xaf, 0x7d,
	0xdc, 0xde, 0xb7, 0xca, 0x52, 0xb5, 0xfd, 0xfe, 0xbc, 0x23, 0x55, 0x2b, 0x08, 0xa0, 0x7a, 0xe0,
	0x74, 0xa4, 0xa0, 0x6a, 0xbf, 0x06, 0x73, 0xa2, 0x6b, 0xca, 0x8b, 0xcd, 0x88, 0xf8, 0x18, 0xc6,
	0xe9, 0x50, 0x53, 0x73, 0xb3, 0x25, 0x42, 0x50, 0x56, 0x2d, 0x77, 0x41, 0xc1, 0xea, 0xdb, 0xde,
	0x05, 0x23, 0xab, 0x73, 0x29, 0x17, 0x37, 0xd4, 0xd7, 0x09, 0x56, 0xdf, 0xc8, 0x86, 0x7a, 0x5a,
	0x46, 0x1e, 0x65, 0x3e, 0xb9, 0xd1, 0x51, 0xe7, 0xb0, 0xd6, 0x1f, 0x65, 0x78, 0xb0, 0xf7, 0x01,
	0x33, 0x46, 0x02, 0x67, 0x34, 0xa9, 0xa6, 0xe9, 0x45, 0x67, 0xb0, 0x94, 0x9f, 0x76, 0xd1, 0xe3,
	0xec, 0x00, 0xe6, 0x8e, 0xc7, 0xeb, 0xff, 0xf9, 0x94, 0x58, 0x1f, 0xa7, 0x0b, 0xe6, 0x44, 0x25,
	0xa2, 0x3b, 0x8b, 0x74, 0xfd, 0xbf, 0x9f, 0x61, 0x68, 0x9b, 0xef, 0xa1, 0x91, 0xab, 0x5a, 0x64,
	0xe7, 0x75, 0xe6, 0x5d, 0xda, 0xf5, 0x27, 0x9f, 0xe5, 0x8c, 0xbd, 0x9d, 0x98, 0xfe, 0xa6, 0xbd,
	0x9d, 0x1d, 0x47, 0xa7, 0xbd, 0x9d, 0x37, 0x3a, 0xba, 0xf9, 0xfe, 0x3c, 0x65, 0x73, 0x76, 0xd2,
	0x9b, 0xb6, 0x39, 0x67, 0x9c, 0x43, 0x67, 0xb9, 0xa2, 0xdd, 0xfc, 0xf4, 0x1d, 0x49, 0x2d, 0x6e,
	0xdd, 0x75, 0x89, 0xd0, 0x77, 0x70, 0xbf, 0x9b, 0xf4, 0x64, 0xfb, 0xeb, 0x11, 0xf5, 0x37, 0xa2,
	0x2b, 0x03, 0x6d, 0x64, 0xaa, 0xf3, 0xa6, 0xc7, 0xf5, 0x8d, 0xa9, 0x01, 0x3c, 0x27, 0xdd, 0x2e,
	0xbe, 0x2c, 0xf6, 0xaa, 0xea, 0xf7, 0xea, 0x8b, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x27, 0x88,
	0xf1, 0xaa, 0x94, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChannelAuctioneerServerClient is the client API for ChannelAuctioneerServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChannelAuctioneerServerClient interface {
	ReserveAccount(ctx context.Context, in *ReserveAccountRequest, opts ...grpc.CallOption) (*ReserveAccountResponse, error)
	InitAccount(ctx context.Context, in *ServerInitAccountRequest, opts ...grpc.CallOption) (*ServerInitAccountResponse, error)
	ModifyAccount(ctx context.Context, in *ServerModifyAccountRequest, opts ...grpc.CallOption) (*ServerModifyAccountResponse, error)
	SubmitOrder(ctx context.Context, in *ServerSubmitOrderRequest, opts ...grpc.CallOption) (*ServerSubmitOrderResponse, error)
	CancelOrder(ctx context.Context, in *ServerCancelOrderRequest, opts ...grpc.CallOption) (*ServerCancelOrderResponse, error)
	OrderState(ctx context.Context, in *ServerOrderStateRequest, opts ...grpc.CallOption) (*ServerOrderStateResponse, error)
	SubscribeBatchAuction(ctx context.Context, opts ...grpc.CallOption) (ChannelAuctioneerServer_SubscribeBatchAuctionClient, error)
}

type channelAuctioneerServerClient struct {
	cc *grpc.ClientConn
}

func NewChannelAuctioneerServerClient(cc *grpc.ClientConn) ChannelAuctioneerServerClient {
	return &channelAuctioneerServerClient{cc}
}

func (c *channelAuctioneerServerClient) ReserveAccount(ctx context.Context, in *ReserveAccountRequest, opts ...grpc.CallOption) (*ReserveAccountResponse, error) {
	out := new(ReserveAccountResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/ReserveAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) InitAccount(ctx context.Context, in *ServerInitAccountRequest, opts ...grpc.CallOption) (*ServerInitAccountResponse, error) {
	out := new(ServerInitAccountResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/InitAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) ModifyAccount(ctx context.Context, in *ServerModifyAccountRequest, opts ...grpc.CallOption) (*ServerModifyAccountResponse, error) {
	out := new(ServerModifyAccountResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/ModifyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) SubmitOrder(ctx context.Context, in *ServerSubmitOrderRequest, opts ...grpc.CallOption) (*ServerSubmitOrderResponse, error) {
	out := new(ServerSubmitOrderResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/SubmitOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) CancelOrder(ctx context.Context, in *ServerCancelOrderRequest, opts ...grpc.CallOption) (*ServerCancelOrderResponse, error) {
	out := new(ServerCancelOrderResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) OrderState(ctx context.Context, in *ServerOrderStateRequest, opts ...grpc.CallOption) (*ServerOrderStateResponse, error) {
	out := new(ServerOrderStateResponse)
	err := c.cc.Invoke(ctx, "/clmrpc.ChannelAuctioneerServer/OrderState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelAuctioneerServerClient) SubscribeBatchAuction(ctx context.Context, opts ...grpc.CallOption) (ChannelAuctioneerServer_SubscribeBatchAuctionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChannelAuctioneerServer_serviceDesc.Streams[0], "/clmrpc.ChannelAuctioneerServer/SubscribeBatchAuction", opts...)
	if err != nil {
		return nil, err
	}
	x := &channelAuctioneerServerSubscribeBatchAuctionClient{stream}
	return x, nil
}

type ChannelAuctioneerServer_SubscribeBatchAuctionClient interface {
	Send(*ClientAuctionMessage) error
	Recv() (*ServerAuctionMessage, error)
	grpc.ClientStream
}

type channelAuctioneerServerSubscribeBatchAuctionClient struct {
	grpc.ClientStream
}

func (x *channelAuctioneerServerSubscribeBatchAuctionClient) Send(m *ClientAuctionMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *channelAuctioneerServerSubscribeBatchAuctionClient) Recv() (*ServerAuctionMessage, error) {
	m := new(ServerAuctionMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChannelAuctioneerServerServer is the server API for ChannelAuctioneerServer service.
type ChannelAuctioneerServerServer interface {
	ReserveAccount(context.Context, *ReserveAccountRequest) (*ReserveAccountResponse, error)
	InitAccount(context.Context, *ServerInitAccountRequest) (*ServerInitAccountResponse, error)
	ModifyAccount(context.Context, *ServerModifyAccountRequest) (*ServerModifyAccountResponse, error)
	SubmitOrder(context.Context, *ServerSubmitOrderRequest) (*ServerSubmitOrderResponse, error)
	CancelOrder(context.Context, *ServerCancelOrderRequest) (*ServerCancelOrderResponse, error)
	OrderState(context.Context, *ServerOrderStateRequest) (*ServerOrderStateResponse, error)
	SubscribeBatchAuction(ChannelAuctioneerServer_SubscribeBatchAuctionServer) error
}

func RegisterChannelAuctioneerServerServer(s *grpc.Server, srv ChannelAuctioneerServerServer) {
	s.RegisterService(&_ChannelAuctioneerServer_serviceDesc, srv)
}

func _ChannelAuctioneerServer_ReserveAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).ReserveAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/ReserveAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).ReserveAccount(ctx, req.(*ReserveAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_InitAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInitAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).InitAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/InitAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).InitAccount(ctx, req.(*ServerInitAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_ModifyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerModifyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).ModifyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/ModifyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).ModifyAccount(ctx, req.(*ServerModifyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_SubmitOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerSubmitOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).SubmitOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/SubmitOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).SubmitOrder(ctx, req.(*ServerSubmitOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerCancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).CancelOrder(ctx, req.(*ServerCancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_OrderState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerOrderStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelAuctioneerServerServer).OrderState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clmrpc.ChannelAuctioneerServer/OrderState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelAuctioneerServerServer).OrderState(ctx, req.(*ServerOrderStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelAuctioneerServer_SubscribeBatchAuction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChannelAuctioneerServerServer).SubscribeBatchAuction(&channelAuctioneerServerSubscribeBatchAuctionServer{stream})
}

type ChannelAuctioneerServer_SubscribeBatchAuctionServer interface {
	Send(*ServerAuctionMessage) error
	Recv() (*ClientAuctionMessage, error)
	grpc.ServerStream
}

type channelAuctioneerServerSubscribeBatchAuctionServer struct {
	grpc.ServerStream
}

func (x *channelAuctioneerServerSubscribeBatchAuctionServer) Send(m *ServerAuctionMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *channelAuctioneerServerSubscribeBatchAuctionServer) Recv() (*ClientAuctionMessage, error) {
	m := new(ClientAuctionMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChannelAuctioneerServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clmrpc.ChannelAuctioneerServer",
	HandlerType: (*ChannelAuctioneerServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReserveAccount",
			Handler:    _ChannelAuctioneerServer_ReserveAccount_Handler,
		},
		{
			MethodName: "InitAccount",
			Handler:    _ChannelAuctioneerServer_InitAccount_Handler,
		},
		{
			MethodName: "ModifyAccount",
			Handler:    _ChannelAuctioneerServer_ModifyAccount_Handler,
		},
		{
			MethodName: "SubmitOrder",
			Handler:    _ChannelAuctioneerServer_SubmitOrder_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _ChannelAuctioneerServer_CancelOrder_Handler,
		},
		{
			MethodName: "OrderState",
			Handler:    _ChannelAuctioneerServer_OrderState_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeBatchAuction",
			Handler:       _ChannelAuctioneerServer_SubscribeBatchAuction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
