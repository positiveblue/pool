{
  "swagger": "2.0",
  "info": {
    "title": "trader.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/clm/accounts": {
      "get": {
        "operationId": "ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcListAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "tags": [
          "Trader"
        ]
      },
      "post": {
        "operationId": "InitAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcAccount"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clmrpcInitAccountRequest"
            }
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    },
    "/v1/clm/accounts/recover": {
      "post": {
        "operationId": "RecoverAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcRecoverAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clmrpcRecoverAccountsRequest"
            }
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    },
    "/v1/clm/accounts/withdraw/{trader_key}": {
      "post": {
        "operationId": "WithdrawAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcWithdrawAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "trader_key",
            "description": "The trader key associated with the account that funds will be withdrawed\nfrom.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clmrpcWithdrawAccountRequest"
            }
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    },
    "/v1/clm/accounts/{trader_key}": {
      "delete": {
        "operationId": "CloseAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcCloseAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "trader_key",
            "description": "The trader key associated with the account that will be closed.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    },
    "/v1/clm/orders": {
      "get": {
        "operationId": "ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcListOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "tags": [
          "Trader"
        ]
      },
      "post": {
        "operationId": "SubmitOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcSubmitOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clmrpcSubmitOrderRequest"
            }
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    },
    "/v1/clm/orders/{order_nonce}": {
      "delete": {
        "operationId": "CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clmrpcCancelOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/gatewayruntimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "order_nonce",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Trader"
        ]
      }
    }
  },
  "definitions": {
    "InvalidOrderFailReason": {
      "type": "string",
      "enum": [
        "INVALID_AMT"
      ],
      "default": "INVALID_AMT"
    },
    "clmrpcAccount": {
      "type": "object",
      "properties": {
        "trader_key": {
          "type": "string",
          "format": "byte",
          "description": "The identifying component of an account. This is the key used for the trader\nin the 2-of-2 multi-sig construction of an account with an auctioneer."
        },
        "outpoint": {
          "$ref": "#/definitions/clmrpcOutPoint",
          "description": "The current outpoint associated with the account. This will change every\ntime the account has been updated."
        },
        "value": {
          "type": "string",
          "format": "uint64",
          "description": "The current value in satoshis of the account."
        },
        "expiration_height": {
          "type": "integer",
          "format": "int64",
          "description": "The height at which the account will expire."
        },
        "state": {
          "$ref": "#/definitions/clmrpcAccountState",
          "description": "The current state of the account."
        },
        "close_txid": {
          "type": "string",
          "format": "byte",
          "description": "The hash of the account's closing transaction, if any."
        }
      }
    },
    "clmrpcAccountState": {
      "type": "string",
      "enum": [
        "PENDING_OPEN",
        "PENDING_UPDATE",
        "OPEN",
        "EXPIRED",
        "PENDING_CLOSED",
        "CLOSED"
      ],
      "default": "PENDING_OPEN",
      "description": " - PENDING_OPEN: The state of an account when it is pending its confirmation on-chain.\n - PENDING_UPDATE: The state of an account when it has undergone an update on-chain either as\npart of a matched order or a trader modification and it is pending its\nconfirmation on-chain.\n - OPEN: The state of an account once it has confirmed on-chain.\n - EXPIRED: The state of an account once its expiration has been reached and its closing\ntransaction has confirmed.\n - PENDING_CLOSED: The state of an account when we're waiting for the closing transaction of\nan account to confirm that required cooperation with the auctioneer.\n - CLOSED: The state of an account once its closing transaction has confirmed."
    },
    "clmrpcAsk": {
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/clmrpcOrder",
          "description": "The common fields shared between both ask and bid order types."
        },
        "max_duration_blocks": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of blocks the liquidity provider is willing to provide\nthe channel funds for."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the order format that is used. Will be increased once new\nfeatures are added."
        }
      }
    },
    "clmrpcBid": {
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/clmrpcOrder",
          "description": "The common fields shared between both ask and bid order types."
        },
        "min_duration_blocks": {
          "type": "integer",
          "format": "int64",
          "description": "Required minimum number of blocks that a channel opened as a result of this\nbid should be kept open."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the order format that is used. Will be increased once new\nfeatures are added."
        }
      }
    },
    "clmrpcCancelOrderResponse": {
      "type": "object"
    },
    "clmrpcCloseAccountResponse": {
      "type": "object",
      "properties": {
        "close_txid": {
          "type": "string",
          "format": "byte",
          "description": "The hash of the closing transaction."
        }
      }
    },
    "clmrpcInitAccountRequest": {
      "type": "object",
      "properties": {
        "account_value": {
          "type": "string",
          "format": "uint64"
        },
        "account_expiry": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "clmrpcInvalidOrder": {
      "type": "object",
      "properties": {
        "order_nonce": {
          "type": "string",
          "format": "byte"
        },
        "fail_reason": {
          "$ref": "#/definitions/InvalidOrderFailReason"
        },
        "fail_string": {
          "type": "string"
        }
      }
    },
    "clmrpcListAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clmrpcAccount"
          }
        }
      }
    },
    "clmrpcListOrdersResponse": {
      "type": "object",
      "properties": {
        "asks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clmrpcAsk"
          }
        },
        "bids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clmrpcBid"
          }
        }
      }
    },
    "clmrpcOrder": {
      "type": "object",
      "properties": {
        "trader_key": {
          "type": "string",
          "format": "byte",
          "description": "The trader's account key of the account that is used for the order."
        },
        "rate_fixed": {
          "type": "integer",
          "format": "int64",
          "description": "Fixed order rate in parts per million."
        },
        "amt": {
          "type": "string",
          "format": "uint64",
          "description": "Order amount in satoshis."
        },
        "funding_fee_rate": {
          "type": "string",
          "format": "uint64",
          "description": "Preferred fee rate to be used for the channel funding transaction, expressed\nin satoshis per 1000 weight units (sat/kW)."
        },
        "order_nonce": {
          "type": "string",
          "format": "byte",
          "description": "Order nonce, acts as unique order identifier."
        },
        "state": {
          "$ref": "#/definitions/clmrpcOrderState",
          "description": "The state the order currently is in."
        },
        "units": {
          "type": "integer",
          "format": "int64",
          "description": "The number of order units the amount corresponds to."
        },
        "units_unfulfilled": {
          "type": "integer",
          "format": "int64",
          "description": "The number of currently unfilled units of this order. This will be equal to\nthe total amount of units until the order has reached the state PARTIAL_FILL\nor EXECUTED."
        }
      }
    },
    "clmrpcOrderState": {
      "type": "string",
      "enum": [
        "ORDER_SUBMITTED",
        "ORDER_CLEARED",
        "ORDER_PARTIALLY_FILLED",
        "ORDER_EXECUTED",
        "ORDER_CANCELED",
        "ORDER_EXPIRED",
        "ORDER_FAILED"
      ],
      "default": "ORDER_SUBMITTED"
    },
    "clmrpcOutPoint": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string",
          "format": "byte",
          "description": "Raw bytes representing the transaction id."
        },
        "output_index": {
          "type": "integer",
          "format": "int64",
          "description": "The index of the output on the transaction."
        }
      }
    },
    "clmrpcOutput": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "uint64",
          "description": "The value, in satoshis, of the output."
        },
        "address": {
          "type": "string",
          "description": "The address corresponding to the output."
        }
      }
    },
    "clmrpcRecoverAccountsRequest": {
      "type": "object"
    },
    "clmrpcRecoverAccountsResponse": {
      "type": "object",
      "properties": {
        "num_recovered_accounts": {
          "type": "integer",
          "format": "int64",
          "description": "The number of accounts that were recovered."
        }
      }
    },
    "clmrpcSubmitOrderRequest": {
      "type": "object",
      "properties": {
        "ask": {
          "$ref": "#/definitions/clmrpcAsk"
        },
        "bid": {
          "$ref": "#/definitions/clmrpcBid"
        }
      }
    },
    "clmrpcSubmitOrderResponse": {
      "type": "object",
      "properties": {
        "invalid_order": {
          "$ref": "#/definitions/clmrpcInvalidOrder",
          "description": "Order failed with the given reason."
        },
        "accepted_order_nonce": {
          "type": "string",
          "format": "byte",
          "description": "The order nonce of the accepted order."
        }
      }
    },
    "clmrpcWithdrawAccountRequest": {
      "type": "object",
      "properties": {
        "trader_key": {
          "type": "string",
          "format": "byte",
          "description": "The trader key associated with the account that funds will be withdrawed\nfrom."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clmrpcOutput"
          },
          "description": "The outputs we'll withdraw funds from the account into."
        },
        "sat_per_vbyte": {
          "type": "string",
          "format": "uint64",
          "description": "The fee rate, in satoshis per vbyte, to use for the withdrawal transaction."
        }
      }
    },
    "clmrpcWithdrawAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/clmrpcAccount",
          "description": "The state of the account after processing the withdrawal."
        },
        "withdraw_txid": {
          "type": "string",
          "format": "byte",
          "description": "The transaction used to withdraw funds from the account."
        }
      }
    },
    "gatewayruntimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    }
  }
}
