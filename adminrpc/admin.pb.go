// Code generated by protoc-gen-go. DO NOT EDIT.
// source: admin.proto

package adminrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type MasterAccountResponse struct {
	//*
	//OutPoint is the outpoint of the master account. If this is a zero outpoint,
	//then no account exists yet.
	Outpoint *OutPoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	//*
	//Balance is the current balance of the master account.
	Balance int64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	//*
	//AuctioneerKey is the base key for the auctioneer, this is a static parameter
	//that's created when the system is initialized.
	KeyDescriptor *KeyDescriptor `protobuf:"bytes,3,opt,name=key_descriptor,json=keyDescriptor,proto3" json:"key_descriptor,omitempty"`
	//*
	//BatchKey is the current batch key for the auctioneer's account, this will be
	//incremented by one each batch.
	BatchKey             []byte   `protobuf:"bytes,4,opt,name=batch_key,json=batchKey,proto3" json:"batch_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterAccountResponse) Reset()         { *m = MasterAccountResponse{} }
func (m *MasterAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MasterAccountResponse) ProtoMessage()    {}
func (*MasterAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1}
}

func (m *MasterAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterAccountResponse.Unmarshal(m, b)
}
func (m *MasterAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterAccountResponse.Marshal(b, m, deterministic)
}
func (m *MasterAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterAccountResponse.Merge(m, src)
}
func (m *MasterAccountResponse) XXX_Size() int {
	return xxx_messageInfo_MasterAccountResponse.Size(m)
}
func (m *MasterAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MasterAccountResponse proto.InternalMessageInfo

func (m *MasterAccountResponse) GetOutpoint() *OutPoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *MasterAccountResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *MasterAccountResponse) GetKeyDescriptor() *KeyDescriptor {
	if m != nil {
		return m.KeyDescriptor
	}
	return nil
}

func (m *MasterAccountResponse) GetBatchKey() []byte {
	if m != nil {
		return m.BatchKey
	}
	return nil
}

type ConnectedTradersResponse struct {
	//*
	//A map of all connected trader streams. The key is the hex-encoded LSAT ID
	//of a connected stream and the content is a list of all account keys that
	//trader connection has sent subscriptions for.
	Streams              map[string]*PubKeyList `protobuf:"bytes,1,rep,name=streams,proto3" json:"streams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ConnectedTradersResponse) Reset()         { *m = ConnectedTradersResponse{} }
func (m *ConnectedTradersResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectedTradersResponse) ProtoMessage()    {}
func (*ConnectedTradersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2}
}

func (m *ConnectedTradersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectedTradersResponse.Unmarshal(m, b)
}
func (m *ConnectedTradersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectedTradersResponse.Marshal(b, m, deterministic)
}
func (m *ConnectedTradersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectedTradersResponse.Merge(m, src)
}
func (m *ConnectedTradersResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectedTradersResponse.Size(m)
}
func (m *ConnectedTradersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectedTradersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectedTradersResponse proto.InternalMessageInfo

func (m *ConnectedTradersResponse) GetStreams() map[string]*PubKeyList {
	if m != nil {
		return m.Streams
	}
	return nil
}

type PubKeyList struct {
	//*
	//The raw bytes of the key being identified.
	RawKeyBytes          [][]byte `protobuf:"bytes,1,rep,name=raw_key_bytes,json=rawKeyBytes,proto3" json:"raw_key_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubKeyList) Reset()         { *m = PubKeyList{} }
func (m *PubKeyList) String() string { return proto.CompactTextString(m) }
func (*PubKeyList) ProtoMessage()    {}
func (*PubKeyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{3}
}

func (m *PubKeyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubKeyList.Unmarshal(m, b)
}
func (m *PubKeyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubKeyList.Marshal(b, m, deterministic)
}
func (m *PubKeyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubKeyList.Merge(m, src)
}
func (m *PubKeyList) XXX_Size() int {
	return xxx_messageInfo_PubKeyList.Size(m)
}
func (m *PubKeyList) XXX_DiscardUnknown() {
	xxx_messageInfo_PubKeyList.DiscardUnknown(m)
}

var xxx_messageInfo_PubKeyList proto.InternalMessageInfo

func (m *PubKeyList) GetRawKeyBytes() [][]byte {
	if m != nil {
		return m.RawKeyBytes
	}
	return nil
}

type OutPoint struct {
	//*
	//Raw bytes representing the transaction id.
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	//*
	//The index of the output on the transaction.
	OutputIndex          uint32   `protobuf:"varint,2,opt,name=output_index,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutPoint) Reset()         { *m = OutPoint{} }
func (m *OutPoint) String() string { return proto.CompactTextString(m) }
func (*OutPoint) ProtoMessage()    {}
func (*OutPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{4}
}

func (m *OutPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutPoint.Unmarshal(m, b)
}
func (m *OutPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutPoint.Marshal(b, m, deterministic)
}
func (m *OutPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutPoint.Merge(m, src)
}
func (m *OutPoint) XXX_Size() int {
	return xxx_messageInfo_OutPoint.Size(m)
}
func (m *OutPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_OutPoint.DiscardUnknown(m)
}

var xxx_messageInfo_OutPoint proto.InternalMessageInfo

func (m *OutPoint) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *OutPoint) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

type KeyLocator struct {
	/// The family of key being identified.
	KeyFamily int32 `protobuf:"varint,1,opt,name=key_family,json=keyFamily,proto3" json:"key_family,omitempty"`
	/// The precise index of the key being identified.
	KeyIndex             int32    `protobuf:"varint,2,opt,name=key_index,json=keyIndex,proto3" json:"key_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyLocator) Reset()         { *m = KeyLocator{} }
func (m *KeyLocator) String() string { return proto.CompactTextString(m) }
func (*KeyLocator) ProtoMessage()    {}
func (*KeyLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{5}
}

func (m *KeyLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyLocator.Unmarshal(m, b)
}
func (m *KeyLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyLocator.Marshal(b, m, deterministic)
}
func (m *KeyLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyLocator.Merge(m, src)
}
func (m *KeyLocator) XXX_Size() int {
	return xxx_messageInfo_KeyLocator.Size(m)
}
func (m *KeyLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyLocator.DiscardUnknown(m)
}

var xxx_messageInfo_KeyLocator proto.InternalMessageInfo

func (m *KeyLocator) GetKeyFamily() int32 {
	if m != nil {
		return m.KeyFamily
	}
	return 0
}

func (m *KeyLocator) GetKeyIndex() int32 {
	if m != nil {
		return m.KeyIndex
	}
	return 0
}

type KeyDescriptor struct {
	//*
	//The raw bytes of the key being identified.
	RawKeyBytes []byte `protobuf:"bytes,1,opt,name=raw_key_bytes,json=rawKeyBytes,proto3" json:"raw_key_bytes,omitempty"`
	//*
	//The key locator that identifies which key to use for signing.
	KeyLoc               *KeyLocator `protobuf:"bytes,2,opt,name=key_loc,json=keyLoc,proto3" json:"key_loc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *KeyDescriptor) Reset()         { *m = KeyDescriptor{} }
func (m *KeyDescriptor) String() string { return proto.CompactTextString(m) }
func (*KeyDescriptor) ProtoMessage()    {}
func (*KeyDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{6}
}

func (m *KeyDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyDescriptor.Unmarshal(m, b)
}
func (m *KeyDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyDescriptor.Marshal(b, m, deterministic)
}
func (m *KeyDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyDescriptor.Merge(m, src)
}
func (m *KeyDescriptor) XXX_Size() int {
	return xxx_messageInfo_KeyDescriptor.Size(m)
}
func (m *KeyDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_KeyDescriptor proto.InternalMessageInfo

func (m *KeyDescriptor) GetRawKeyBytes() []byte {
	if m != nil {
		return m.RawKeyBytes
	}
	return nil
}

func (m *KeyDescriptor) GetKeyLoc() *KeyLocator {
	if m != nil {
		return m.KeyLoc
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "adminrpc.EmptyRequest")
	proto.RegisterType((*MasterAccountResponse)(nil), "adminrpc.MasterAccountResponse")
	proto.RegisterType((*ConnectedTradersResponse)(nil), "adminrpc.ConnectedTradersResponse")
	proto.RegisterMapType((map[string]*PubKeyList)(nil), "adminrpc.ConnectedTradersResponse.StreamsEntry")
	proto.RegisterType((*PubKeyList)(nil), "adminrpc.PubKeyList")
	proto.RegisterType((*OutPoint)(nil), "adminrpc.OutPoint")
	proto.RegisterType((*KeyLocator)(nil), "adminrpc.KeyLocator")
	proto.RegisterType((*KeyDescriptor)(nil), "adminrpc.KeyDescriptor")
}

func init() { proto.RegisterFile("admin.proto", fileDescriptor_73a7fc70dcc2027c) }

var fileDescriptor_73a7fc70dcc2027c = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0xd6, 0x75, 0x6d, 0x4f, 0xd3, 0x69, 0xb2, 0xf8, 0x89, 0x0a, 0x88, 0x2a, 0x57, 0x15,
	0x12, 0x2d, 0x2a, 0x37, 0x88, 0x0b, 0xa4, 0x0e, 0x86, 0x36, 0x95, 0x9f, 0xca, 0x70, 0x5f, 0x39,
	0xce, 0x61, 0x44, 0x49, 0xed, 0x60, 0x3b, 0x6c, 0x7e, 0x23, 0xde, 0x80, 0x3b, 0x9e, 0x0d, 0xd9,
	0x51, 0x9b, 0x76, 0x6c, 0xe2, 0xee, 0x9c, 0xf3, 0x9d, 0xbf, 0xef, 0xf8, 0x33, 0xf4, 0x59, 0xba,
	0xce, 0xc4, 0xa4, 0x54, 0xd2, 0x48, 0xd2, 0xf5, 0x8e, 0x2a, 0xf9, 0xf0, 0xf1, 0xa5, 0x94, 0x97,
	0x05, 0x4e, 0x59, 0x99, 0x4d, 0x99, 0x10, 0xd2, 0x30, 0x93, 0x49, 0xa1, 0xeb, 0xbc, 0xf8, 0x18,
	0xc2, 0xb3, 0x75, 0x69, 0x2c, 0xc5, 0x1f, 0x15, 0x6a, 0x13, 0xff, 0x09, 0xe0, 0xfe, 0x47, 0xa6,
	0x0d, 0xaa, 0x39, 0xe7, 0xb2, 0x12, 0x86, 0xa2, 0x2e, 0xa5, 0xd0, 0x48, 0x26, 0xd0, 0x95, 0x95,
	0x29, 0x65, 0x26, 0x4c, 0x14, 0x8c, 0x82, 0x71, 0x7f, 0x46, 0x26, 0x9b, 0x21, 0x93, 0xcf, 0x95,
	0x59, 0x3a, 0x84, 0x6e, 0x73, 0x48, 0x04, 0x9d, 0x84, 0x15, 0x4c, 0x70, 0x8c, 0x0e, 0x46, 0xc1,
	0xb8, 0x45, 0x37, 0x2e, 0x79, 0x03, 0xc7, 0x39, 0xda, 0x55, 0x8a, 0x9a, 0xab, 0xac, 0x34, 0x52,
	0x45, 0x2d, 0xdf, 0xef, 0x61, 0xd3, 0x6f, 0x81, 0xf6, 0xdd, 0x16, 0xa6, 0x83, 0x7c, 0xd7, 0x25,
	0x8f, 0xa0, 0x97, 0x30, 0xc3, 0xbf, 0xaf, 0x72, 0xb4, 0xd1, 0xe1, 0x28, 0x18, 0x87, 0xb4, 0xeb,
	0x03, 0x0b, 0xb4, 0xf1, 0xef, 0x00, 0xa2, 0xb7, 0x52, 0x08, 0xe4, 0x06, 0xd3, 0xaf, 0x8a, 0xa5,
	0xa8, 0xf4, 0x96, 0xc3, 0x05, 0x74, 0xb4, 0x51, 0xc8, 0xd6, 0x3a, 0x0a, 0x46, 0xad, 0x71, 0x7f,
	0x36, 0x6d, 0x46, 0xde, 0x55, 0x34, 0xf9, 0x52, 0x57, 0x9c, 0x09, 0xa3, 0x2c, 0xdd, 0xd4, 0x0f,
	0x97, 0x10, 0xee, 0x02, 0xe4, 0x04, 0x5a, 0x6e, 0x1d, 0x77, 0x99, 0x1e, 0x75, 0x26, 0x79, 0x06,
	0xed, 0x9f, 0xac, 0xa8, 0x6a, 0xfa, 0xfd, 0xd9, 0xbd, 0x66, 0xd4, 0xb2, 0x4a, 0x16, 0x68, 0x3f,
	0x64, 0xda, 0xd0, 0x3a, 0xe5, 0xf5, 0xc1, 0xab, 0x20, 0x7e, 0x01, 0xd0, 0x00, 0x24, 0x86, 0x81,
	0x62, 0x57, 0x8e, 0xe2, 0x2a, 0xb1, 0x06, 0xeb, 0x85, 0x43, 0xda, 0x57, 0xec, 0x6a, 0x81, 0xf6,
	0xd4, 0x85, 0xe2, 0x53, 0xe8, 0x6e, 0x0e, 0x4f, 0x08, 0x1c, 0x9a, 0xeb, 0x2c, 0xf5, 0x0b, 0x84,
	0xd4, 0xdb, 0x24, 0x86, 0xd0, 0x3d, 0x47, 0x65, 0x56, 0x99, 0x48, 0xf1, 0xda, 0x2f, 0x32, 0xa0,
	0x7b, 0xb1, 0xf8, 0x1c, 0xc0, 0x8d, 0x94, 0x9c, 0xb9, 0xd3, 0x3e, 0x01, 0x70, 0x13, 0xbf, 0xb1,
	0x75, 0x56, 0xd4, 0x64, 0xda, 0xb4, 0x97, 0xa3, 0x7d, 0xef, 0x03, 0xee, 0xf2, 0x0e, 0x6e, 0xba,
	0xb5, 0x69, 0x37, 0x47, 0x7b, 0xe1, 0x3b, 0x25, 0x30, 0xd8, 0x7b, 0xb6, 0xdb, 0x28, 0x04, 0x37,
	0x28, 0x90, 0xe7, 0xd0, 0x71, 0x78, 0x21, 0xf9, 0xbf, 0x67, 0x6a, 0xf6, 0xa2, 0x47, 0xb9, 0xb7,
	0x67, 0xbf, 0x02, 0x08, 0xe7, 0x15, 0x77, 0x0a, 0x9e, 0xbb, 0x34, 0x72, 0x0e, 0x83, 0x3d, 0xb9,
	0x92, 0x07, 0x4d, 0xfd, 0xae, 0xb0, 0x87, 0x4f, 0x9b, 0xf8, 0xed, 0xfa, 0xfe, 0x04, 0x27, 0x37,
	0x25, 0x70, 0x67, 0xb3, 0xf8, 0xff, 0xb2, 0x49, 0x8e, 0xfc, 0x07, 0x7b, 0xf9, 0x37, 0x00, 0x00,
	0xff, 0xff, 0xe3, 0x51, 0xa7, 0x01, 0x97, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuctionAdminClient is the client API for AuctionAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuctionAdminClient interface {
	MasterAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*MasterAccountResponse, error)
	ConnectedTraders(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ConnectedTradersResponse, error)
}

type auctionAdminClient struct {
	cc *grpc.ClientConn
}

func NewAuctionAdminClient(cc *grpc.ClientConn) AuctionAdminClient {
	return &auctionAdminClient{cc}
}

func (c *auctionAdminClient) MasterAccount(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*MasterAccountResponse, error) {
	out := new(MasterAccountResponse)
	err := c.cc.Invoke(ctx, "/adminrpc.AuctionAdmin/MasterAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auctionAdminClient) ConnectedTraders(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ConnectedTradersResponse, error) {
	out := new(ConnectedTradersResponse)
	err := c.cc.Invoke(ctx, "/adminrpc.AuctionAdmin/ConnectedTraders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuctionAdminServer is the server API for AuctionAdmin service.
type AuctionAdminServer interface {
	MasterAccount(context.Context, *EmptyRequest) (*MasterAccountResponse, error)
	ConnectedTraders(context.Context, *EmptyRequest) (*ConnectedTradersResponse, error)
}

func RegisterAuctionAdminServer(s *grpc.Server, srv AuctionAdminServer) {
	s.RegisterService(&_AuctionAdmin_serviceDesc, srv)
}

func _AuctionAdmin_MasterAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctionAdminServer).MasterAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminrpc.AuctionAdmin/MasterAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctionAdminServer).MasterAccount(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuctionAdmin_ConnectedTraders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctionAdminServer).ConnectedTraders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminrpc.AuctionAdmin/ConnectedTraders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctionAdminServer).ConnectedTraders(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuctionAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminrpc.AuctionAdmin",
	HandlerType: (*AuctionAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MasterAccount",
			Handler:    _AuctionAdmin_MasterAccount_Handler,
		},
		{
			MethodName: "ConnectedTraders",
			Handler:    _AuctionAdmin_ConnectedTraders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin.proto",
}
