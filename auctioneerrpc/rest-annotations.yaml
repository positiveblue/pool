type: google.api.Service
config_version: 3

http:
  rules:

    # auctioneer.proto: we'll only allow a small subset of calls that can be
    # cached (and are therefore "cheap" resource wise) to be used with REST.
    # That way we can white list them in aperture to allow them to be queried
    # without an LSAT (if we want to).
    - selector: poolrpc.ChannelAuctioneer.Terms
      get: "/v1/pool/auction/terms"
    - selector: poolrpc.ChannelAuctioneer.MarketInfo
      get: "/v1/pool/market/info"
    - selector: poolrpc.ChannelAuctioneer.OrderMetrics
      get: "/v1/pool/order/metrics"
    - selector: poolrpc.ChannelAuctioneer.BatchMetrics
      get: "/v1/pool/batch/metrics"

    # Make the URI convenient to be called in different ways, the shortest of
    # them just returning the most recent batch.
    - selector: poolrpc.ChannelAuctioneer.BatchSnapshots
      get: "/v1/pool/batch/snapshots"
    - selector: poolrpc.ChannelAuctioneer.BatchSnapshots
      get: "/v1/pool/batch/snapshots/{start_batch_id}"
    - selector: poolrpc.ChannelAuctioneer.BatchSnapshots
      get: "/v1/pool/batch/snapshots/{start_batch_id}/{num_batches_back}"

    # The following calls won't be exposed for now, we add them with empty URI
    # mappings to avoid warnings when generating the stubs.
    - selector: poolrpc.ChannelAuctioneer.ReserveAccount
    - selector: poolrpc.ChannelAuctioneer.InitAccount
    - selector: poolrpc.ChannelAuctioneer.ModifyAccount
    - selector: poolrpc.ChannelAuctioneer.SubmitOrder
    - selector: poolrpc.ChannelAuctioneer.CancelOrder
    - selector: poolrpc.ChannelAuctioneer.OrderState
    - selector: poolrpc.ChannelAuctioneer.SubscribeBatchAuction
    - selector: poolrpc.ChannelAuctioneer.SubscribeSidecar
    - selector: poolrpc.ChannelAuctioneer.RelevantBatchSnapshot
    - selector: poolrpc.ChannelAuctioneer.BatchSnapshot
    - selector: poolrpc.ChannelAuctioneer.NodeRating
